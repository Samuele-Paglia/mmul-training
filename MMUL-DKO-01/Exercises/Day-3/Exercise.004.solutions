# Exercise 004 - Run a local built container on OpenShift - Solutions

1) oc new-project my-second-project

2) mkdir print-date

> cd print-date

> cat << EOF > Dockerfile
FROM ubuntu:latest
CMD bash -c "while true; do date; sleep 5; done"
EOF

3) eval $(minishift docker-env)

4) docker build -t my-second-project/print-date .
Sending build context to Docker daemon  2.048kB
Step 1/2 : FROM ubuntu:latest
 ---> 1d9c17228a9e
Step 2/2 : CMD bash -c "while true; do date; sleep 5; done"
 ---> Running in 36d6a5cc88f7
Removing intermediate container 36d6a5cc88f7
 ---> ddf49a2b2b01
Successfully built ddf49a2b2b01
Successfully tagged my-second-project/print-date:latest

5) docker tag my-second-project/print-date $(minishift openshift registry)/my-second-project/print-date

> docker image list | grep print-date
172.30.1.1:5000/my-second-project/print-date   latest              ddf49a2b2b01        2 minutes ago       86.7MB
my-second-project/print-date                   latest              ddf49a2b2b01        2 minutes ago       86.7MB

> docker push 172.30.1.1:5000/my-second-project/print-date
The push refers to a repository [172.30.1.1:5000/my-second-project/print-date]
4b7d93055d87: Preparing 
663e8522d78b: Preparing 
283fb404ea94: Preparing 
bebe7ce6215a: Preparing 
unauthorized: authentication required

6) We need to authenticate on the registry.

7) docker login -u developer -p $(oc whoami -t) $(minishift openshift registry)
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /home/rasca/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

8) docker push 172.30.1.1:5000/my-second-project/print-date
The push refers to a repository [172.30.1.1:5000/my-second-project/print-date]
4b7d93055d87: Pushed 
663e8522d78b: Pushed 
283fb404ea94: Pushed 
bebe7ce6215a: Pushed 
latest: digest: sha256:c3e6bed76d7391cc656bfcbc29b5c925b3e5894aa966ab49d269a0f5f702f5a2 size: 1150

9) oc new-app --name=print-date --docker-image=$(minishift openshift registry)/my-second-project/print-date
W0206 18:53:01.101073   23879 dockerimagelookup.go:233] Docker registry lookup failed: Get https://172.30.1.1:5000/v2/: http: server gave HTTP response to HTTPS client
W0206 18:53:01.208479   23879 newapp.go:479] Could not find an image stream match for "172.30.1.1:5000/my-second-project/print-date:latest". Make sure that a Docker image with that tag is available on the node for the deployment to succeed.
--> Found Docker image 92a48d5 (8 minutes old) from 172.30.1.1:5000 for "172.30.1.1:5000/my-second-project/print-date:latest"

    * This image will be deployed in deployment config "print-date"
    * The image does not expose any ports - if you want to load balance or send traffic to this component
      you will need to create a service with 'expose dc/print-date --port=[port]' later
    * WARNING: Image "172.30.1.1:5000/my-second-project/print-date:latest" runs as the 'root' user which may not be permitted by your cluster administrator

--> Creating resources ...
    deploymentconfig.apps.openshift.io "print-date" created
--> Success
    Run 'oc status' to view your app.

10) oc status
In project my-second-project on server https://192.168.42.154:8443

dc/print-date deploys 172.30.1.1:5000/my-second-project/print-date:latest 
  deployment #1 deployed 21 seconds ago - 1 pod


2 infos identified, use 'oc status --suggest' to see details.

> oc logs print-date-1-t8vmn -f
Wed Feb  6 17:53:02 UTC 2019
Wed Feb  6 17:53:07 UTC 2019
Wed Feb  6 17:53:12 UTC 2019
Wed Feb  6 17:53:17 UTC 2019
Wed Feb  6 17:53:22 UTC 2019
Wed Feb  6 17:53:27 UTC 2019
Wed Feb  6 17:53:32 UTC 2019
Wed Feb  6 17:53:37 UTC 2019
Wed Feb  6 17:53:42 UTC 2019

NOTE: without creating a project with the same name of the tag anything would
work, you will always get an authentication failure, because everything relies
on the project.
