# Exercise 004 - Create an ImageStream for nginx:alpine and verify available images - Solutions

1) oc login -u developer --password casual https://192.168.42.154:8443
Login successful.

> oc new-project imagestream-test
Now using project "imagestream-test" on server "https://192.168.42.154:8443".
...

> cat << EOF > nginx-imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  creationTimestamp: null
  name: nginx
spec:
  lookupPolicy:
    local: false
  tags:
  - from:
      kind: DockerImage
      name: nginx:alpine
    generation: null
    importPolicy: {}
    name: alpine
EOF

3) oc create -f nginx-imagestream.yaml
imagestream.image.openshift.io/nginx created

4) oc get is
NAME      DOCKER REPO                       TAGS      UPDATED
nginx     172.30.1.1:5000/imagestream-test/nginx   alpine    2 seconds ago

> oc describe is nginx
Namespace:		imagestream-test
Created:		22 seconds ago
Labels:			<none>
Annotations:		openshift.io/image.dockerRepositoryCheck=2019-02-11T15:11:45Z
Docker Pull Spec:	172.30.1.1:5000/imagestream-test/nginx
Image Lookup:		local=false
Unique Images:		1
Tags:			1

alpine
  tagged from nginx:alpine

  * nginx@sha256:c9a462bce16d85dde1861d45aebfae80c812d733187d045cbb7ffe3d71ac37bd
      21 seconds ago

5) oc get image
No resources found.
Error from server (Forbidden): images.image.openshift.io is forbidden: User "developer" cannot list images.image.openshift.io at the cluster scope: no RBAC policy matched

6) oc login -u admin
Logged into "https://192.168.64.5:8443" as "system:admin" using existing credentials.
...

7) oc get image | grep nginx
NAME                                                                      DOCKER REF
...
sha256:c9a462bce16d85dde1861d45aebfae80c812d733187d045cbb7ffe3d71ac37bd   nginx@sha256:c9a462bce16d85dde1861d45aebfae80c812d733187d045cbb7ffe3d71ac37bd

8) oc describe is nginx | awk '/nginx@sha/ {print $2}'
nginx@sha256:c9a462bce16d85dde1861d45aebfae80c812d733187d045cbb7ffe3d71ac37bd
