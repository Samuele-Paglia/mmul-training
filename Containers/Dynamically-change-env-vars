###############################################################################
# To run a container with an env var:
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> docker run -it --rm -e NCAT_MESSAGE='Pippo' --name test -p 8888:8888 rasca/ncat-80-local-file:simplified
###############################################################################

###############################################################################
# To create a container image that have env vars in it and push it on the
# openshift registry:

rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> docker build -t rasca/ncat-80-local-file:simplified .
[...]
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> eval $(minishift docker-env)
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> eval $(minishift oc-env)
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> docker tag rasca/ncat-http-port-local-file:simplified $(minishift openshift registry)/rasca/ncat-http-port-local-file:simplified
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> docker login -u developer -p $(oc whoami -t) $(minishift openshift registry)
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /home/rasca/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> docker push $(minishift openshift registry)/rasca/ncat-http-port-local-file:simplified
The push refers to a repository [172.30.1.1:5000/rasca/ncat-http-port-local-file]
f2729f39377b: Pushed 
2c77720cf318: Layer already exists 
1f6b6c7dc482: Layer already exists 
c8dbbe73b68c: Layer already exists 
2fb7bfc6145d: Layer already exists 
simplified: digest: sha256:b9eb6ff7b770d4eedb3a587be0026a1e7e55f1ac242a8f2a6a4fe0a42d8c57ed size: 1362

# Create the app
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc new-app --name=ncat-test-simple --docker-image=rasca/ncat-http-port-local-file:simplified
W0108 15:07:38.148599   23976 newapp.go:477] Could not find an image stream match for "rasca/ncat-http-port-local-file:simplified". Make sure that a Docker image with that tag is available on the node for the deployment to succeed.
--> Found Docker image 735e6f4 (2 minutes old) from  for "rasca/ncat-http-port-local-file:simplified"

    * This image will be deployed in deployment config "ncat-test-simple"
    * Port 8888/tcp will be load balanced by service "ncat-test-simple"
      * Other containers can access this service through the hostname "ncat-test-simple"
    * WARNING: Image "rasca/ncat-http-port-local-file:simplified" runs as the 'root' user which may not be permitted by your cluster administrator

--> Creating resources ...
    deploymentconfig "ncat-test-simple" created
    service "ncat-test-simple" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/ncat-test-simple' 
    Run 'oc status' to view your app.

# Expose the app
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc expose service ncat-test-simple
route "ncat-test-simple" exposed
###############################################################################

###############################################################################
# It is possible to dynamically set the env var:
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc env dc/ncat-test-simple NCAT_MESSAGE="OpenShift Test" --overwrite
deploymentconfig "ncat-test-simple" updated

# A new pod is created
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc status
In project rasca on server https://192.168.42.251:8443

http://ncat-test-simple-rasca.192.168.42.251.nip.io to pod port 8888-tcp (svc/ncat-test-simple)
  dc/ncat-test-simple deploys docker.io/rasca/ncat-http-port-local-file:simplified 
    deployment #2 running for 6 seconds - 1 pod
    deployment #1 deployed about a minute ago
###############################################################################

###############################################################################
# Same thing can be done with port:
# Afer changing the NCAT_PORT environmental variable:

rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc env dc/ncat-test NCAT_PORT="9999" --overwrite
deploymentconfig "ncat-test" updated

# - A new pod will be created listening on the new EXPOSE port (since it was an
#   environmental variable

rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc status
In project rasca on server https://192.168.42.251:8443

http://ncat-test-rasca.192.168.42.251.nip.io to pod port 9999 (svc/ncat-test)
  dc/ncat-test deploys 172.30.1.1:5000/rasca/ncat-http-port-local-file:latest 
    deployment #11 deployed 2 minutes ago - 1 pod
    deployment #10 deployed 4 minutes ago
    deployment #9 deployed 4 minutes ago

# - The old service and router aren't useful anymore (pointing to old ports)
#   and should be deleted

rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc delete route ncat-test
route.route.openshift.io "ncat-test" deleted
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc delete service ncat-test
service "ncat-test" deleted

# - A new service and router should be created to expose again the service

rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc create service clusterip ncat-test --tcp=9999:9999
service "ncat-test" created
rasca@anomalia [~/RaSca/Docker/ncat-http-port-local-file]> oc expose svc/ncat-test
route "ncat-test" exposed
###############################################################################
