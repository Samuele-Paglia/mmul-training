# Exercise 004 - Create and run your own compose stack

1) Create a directory named ex004 and use it for the compose project;

2) Create a docker-compose.yml file with these specifications:
   - Deploy a container named "web" based on nginx:alpine which will map a
     network named "frontend" and a network named "backend";
     This container will map a volume named "data" in the path
     "/usr/share/nginx/html";
   - Deploy a container named "otherweb" based on nginx:alpine which will map a
     network named "frontend". This container will map a volume named "data" in
     the path "/usr/share/nginx/html";
   - Define two default networks, one named "frontend" and one named "backend";
   - Define a default volume named "data";

3) Try to execute this compose. What happens?

4) Look inside the running containers to see the differences in the networks;

5) Try to exec the command "wget -O- http://localhost" inside the two
   containers;

6) Enter one of the containers and replace the index.html file in the
   "/usr/share/nginx/html" path with "Test compose".

7) Try to exec the command "wget -O- http://localhost" inside the two
   containers. What happens? Why?

8) Try to stop the application stack and look at various docker components
   (volumes, networks, containers);

9) Run again the compose and execute again the wget inside the two containers.
   What happens? Why?
